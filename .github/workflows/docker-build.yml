name: Build and Push Press Docker Image

on:
  workflow_run:
    workflows:
      - Semantic Release
    types:
      - completed

jobs:
  build-and-push:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download release metadata
        uses: actions/download-artifact@v3
        with:
          name: release-metadata

      - name: Load release metadata
        run: |
          export RELEASE_TAG=$(cat release_tag.txt)
          export FRAPPE_BRANCH=$(cat frappe_branch.txt)
          echo "RELEASE_TAG=$RELEASE_TAG"
          echo "FRAPPE_BRANCH=$FRAPPE_BRANCH" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Encode apps.json
        run: |
          export APPS_JSON_BASE64=$(base64 -w 0 ./.github/build/apps.json)
          echo "APPS_JSON_BASE64=$APPS_JSON_BASE64" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build \
            --build-arg FRAPPE_PATH=https://github.com/frappe/frappe \
            --build-arg FRAPPE_BRANCH=${{ env.FRAPPE_BRANCH }} \
            --build-arg APPS_JSON_BASE64=${{ env.APPS_JSON_BASE64 }} \
            --tag digikwal/press:${{ env.RELEASE_TAG }} \
            --file images/layered/Containerfile .

      - name: Push Docker image and tags
        run: |
          docker push digikwal/press:${{ env.RELEASE_TAG }}
          if [[ "${{ env.RELEASE_TAG }}" != *"-"* ]]; then
            docker tag digikwal/press:${{ env.RELEASE_TAG }} digikwal/press:latest
            docker push digikwal/press:latest
          else
            docker tag digikwal/press:${{ env.RELEASE_TAG }} digikwal/press:dev
            docker push digikwal/press:dev
          fi
